@間隔調整
--track0:X軸(%),0,1000,100,0.01
--track1:Y軸(%),0,1000,100,0.01
--track2:拡大率,0,1000,100,0.01
--track3:Z軸回転,-720,720,0,0.01
--dialog:pos,pos={0,0};help,help="https://github.com/streamwest-1629/kasaibox"

obj.setanchor("pos", 1, "line")
local ox = obj.ox - pos[1]
local oy = obj.oy - pos[2]

ox = ox * (obj.track0 * 0.01)
oy = oy * (obj.track1 * 0.01)

local zoom = (obj.track2 * 0.01)
ox = ox * zoom
oy = oy * zoom
obj.zoom = obj.zoom * zoom

local rad = math.rad(obj.rz + obj.track3)
local cos = math.cos(rad)
local sin = math.sin(rad)
local res_ox = ox * cos - oy * sin
local res_oy = ox * sin + oy * cos
obj.rz = obj.rz + obj.track3

obj.ox = res_ox + pos[1]
obj.oy = res_oy + pos[2]

@両端消失フェード
--track0:始端消失,0,5,0.15,0.01
--track1:終端消失,0,5,0.15,0.01
--track2:始端フェード,0,5,0,0.01
--track3:終端フェード,0,5,0,0.01

local elapsedTime = obj.time
local remainingTime = obj.totaltime - obj.time

if elapsedTime < obj.track0 or remainingTime < obj.track1 then
    obj.alpha = 0
else 
    local alpha = math.min(1, (elapsedTime - obj.track0) / (obj.track2 + 0.000001), (remainingTime - obj.track1) / (obj.track3 + 0.000001))
    obj.alpha = obj.alpha * alpha
end     

@testing_Real-ESRGAN
--track0:scale,1,4,2,0.01
--dialog:使用モデル,modelname="RealESRGANv2-animevideo-xsx4";

require("kasaibox")

local scale = obj.track0
local ox = obj.ox
local oy = obj.oy
local oz = obj.oz
local rx = obj.rx
local ry = obj.ry
local rz = obj.rz
local cx = obj.cx
local cy = obj.cy
local cz = obj.cz
local zoom = obj.zoom
local alpha = obj.alpha

local origin_height = obj.h
local origin_width = obj.w

local x2resize = 1
local extend_height = origin_height
local extend_width = origin_width
if scale > 2 then
    x2resize = 0
    obj.setoption("drawtarget", "tempbuffer", obj.w * 4, obj.h * 4)
    extend_height = (origin_height * 3)
    extend_width = (origin_width * 3)
else
    obj.setoption("drawtarget", "tempbuffer", obj.w * 2, obj.h * 2)
end

local extend_top = math.floor(extend_height / 2)
local extend_bottom = extend_height - extend_top
local extend_left = math.floor(extend_width / 2)
local extend_right = extend_width - extend_left

obj.effect("領域拡張", "上", extend_top, "下", extend_bottom, "左", extend_left, "右", extend_right)
obj.draw()

obj.setoption("drawtarget", "framebuffer")
obj.load("tempbuffer")

local data, w, h = obj.getpixeldata()

local msg = kasaibox.real_esrgan(data, w, h, extend_top, extend_bottom, extend_left, extend_right, modelname, x2resize)
if msg ~= "" then
    obj.load("text", msg)
else
    obj.putpixeldata(data)
    if scale > 2 then
        obj.effect("リサイズ", "拡大率", (scale / 4) * 100)
    else
        obj.effect("リサイズ", "拡大率", (scale / 2) * 100)
    end
    obj.ox = ox * scale
    obj.oy = oy * scale
    obj.oz = oz * scale
    obj.rx = rx
    obj.ry = ry
    obj.rz = rz
    obj.cx = cx * scale
    obj.cy = cy * scale
    obj.cz = cz * scale
    obj.zoom = zoom
    obj.alpha = alpha
end

@testing_require

require("kasaibox")
local area = kasaibox.area(obj.w, obj.h)
obj.load("text", area)

@testing_scope

require("kasaibox")
local num_called = kasaibox.count_called()
obj.load("text", num_called)

@testing_dirpath

require("kasaibox")
local dlldir = kasaibox.print_dlldirpath()
obj.load("text", dlldir)


@testing_opencv

require("kasaibox")
data, w, h = obj.getpixeldata()
kasaibox.opencv_binalize(data, w, h)
obj.putpixeldata(data)

@四隅
--track0:四隅高,0,1000,200,1
--track1:四隅幅,0,1000,200,1
--track2:回転,-360,360,0.01
--track3:ぼかし,0,1000,0,1
--dialog:中心X,cx=0;中心Y,cy=0;help,help="https://github.com/streamwest-1629/kasaibox";

local clip_height = obj.h - (obj.track0 * 2)
local clip_width = obj.w - (obj.track1 * 2)

if clip_height > 0 then
    obj.effect("斜めクリッピング","中心X", cx, "中心Y", cy, "角度", 0+obj.track2, "ぼかし", obj.track3, "幅", -clip_height)
end
if clip_width > 0 then
    obj.effect("斜めクリッピング","中心X", cx, "中心Y", cy, "角度", 90+obj.track2, "ぼかし", obj.track3, "幅", -clip_width)
end
